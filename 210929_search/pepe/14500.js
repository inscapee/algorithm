const input = require('fs').readFileSync('/dev/stdin').toString().split('/n');

const figure = [
  [[0, 0], [0, 1], [0, 2], [0, 3]],
  [[0, 0], [1, 0], [2, 0], [3, 0]],

  [[0, 0], [0, 1], [1, 0], [1, 1]],

  [[0, 0], [0, 1], [0, 2], [1, 2]],
  [[0, 0], [1, 0], [2, 0], [2, -1]],
  [[0, 0], [0, -1], [0, -2], [-1, -2]],
  [[0, 0], [-1, 0], [-2, 0], [-2, 1]],
  [[0, 0], [1, 0], [2, 0], [2, 1]],
  [[0, 0], [0, -1], [0, -2], [1, -2]],
  [[0, 0], [-1, 0], [-2, -0], [-2, -1]],
  [[0, 0], [0, 1], [0, 2], [-1, 2]],

  [[0, 0], [1, 0], [1, 1], [2, 1]],
  [[0, 0], [0, -1], [1, -1], [1, -2]],
  [[0, 0], [-1, 0], [-1, -1], [-2, -1]],
  [[0, 0], [0, 1], [-1, 1], [-1, 2]],
  [[0, 0], [1, 0], [1, -1], [2, -1]],
  [[0, 0], [0, -1], [-1, -1], [-1, -2]],
  [[0, 0], [-1, 0], [-1, 1], [-2, 1]],
  [[0, 0], [0, 1], [1, 1], [1, 2]],

  [[0, 0], [1, 0], [2, 0], [1, -1]],
  [[0, 0], [0, -1], [0, -2], [-1, -1]],
  [[0, 0], [-1, 0], [-2, 0], [1, 1]],
  [[0, 0], [0, 1], [0, 2], [1, 1]],
  [[0, 0], [1, 0], [2, 0], [1, 1]],
  [[0, 0], [0, -1], [0, -2], [1, -1]],
  [[0, 0], [-1, 0], [-2, 0], [-1, -1]],
  [[0, 0], [0, 1], [0, 2], [-1, 1]]
];


const length = input[0].split(' ');
const maxOrient = Number(length[0]);
const maxLand = Number(length[1]);
const newArr = [];
let result = [];


for (let [i, a] of input.slice(1).entries()) {
  newArr[i] = a.split(' ');
}

newArr.map((els, i) => {
  els.map((el, j) => {
    figure.map(figures => {
      let sum = 0;
      figures.map(figure => {
        const x = Number(j + figure[0]);
        const y = Number(i + figure[1]);
        if (x < 0 || y < 0 || x >= maxOrient || y >= maxLand) {
          return;
        }
        sum = sum + Number(newArr[x][y]);
      });
      result.push(sum);
    });
  });
});

console.log(Math.max(...result));
